/* Hide Redmine 6 inline SVG icons; keep theme's ::before sprites */
/* svg.icon-svg,

.icon::before { display: none !important; content: none !important; background: none !important; -webkit-mask: none !important; mask: none !important; }
.icon > .icon-svg { display: inline-block !important; } */

/* Hide all icons by default */
svg.s18.icon-svg,
svg.s20.icon-svg {
  display: none !important;
  width: 0 !important;
  height: 0 !important;
  overflow: hidden !important;
  visibility: hidden !important; /* safer than collapse */
}

/* Restore icons only in admin menu */
#admin-menu svg.s18.icon-svg,
#admin-menu svg.s20.icon-svg {
  display: inline-block !important;
  width: 20px !important;
  height: 18px !important;
  overflow: hidden !important;
  visibility: visible !important;
  vertical-align: middle !important;
  fill: #0a4d6c !important;
}

#admin-menu a.icon {
  display: inline-flex;           /* icon + label in one row */
  align-items: center;            /* vertical centering */
  gap: 8px;                       /* space between icon and label */
  padding-left: 0 !important;     /* neutralize theme paddings */
  min-height: 24px;
  line-height: 1.2;
}

/* Reserve a fixed icon box on the left (works for both ::before and inline SVG) */
#admin-menu a.icon::before,
#admin-menu a.icon > svg.icon-svg {
  flex: 0 0 20px;                 /* fixed slot width */
  width: 20px;
  height: 20px;
  display: inline-block;
}

/* Always generate ::before so the column stays aligned even if empty */
#admin-menu a.icon::before {
  content: "";
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;       /* scale sprite nicely */
  -webkit-mask-size: contain;
          mask-size: contain;
}

/* Prefer sprites by default: hide inline SVGs unless needed */
#admin-menu a.icon > svg.icon-svg {
  display: none;
  fill: currentColor;             /* color = text color */
}

/* If an inline SVG is present, hide the sprite and show the SVG (modern CSS) */
#admin-menu a.icon:has(> svg.icon-svg)::before {
  background: none !important;
  -webkit-mask: none !important;
          mask: none !important;
}
#admin-menu a.icon:has(> svg.icon-svg) > svg.icon-svg {
  display: inline-block;
}

/* Optional: keep label neatly aligned */
#admin-menu a.icon .icon-label {
  line-height: 1.2;
}

svg.s20.icon-svg.icon-rtl {
  display: none !important;
  width: 0 !important;
  height: 0 !important;
  overflow: hidden !important;
  visibility: collapse !important;
}

a.icon.icon-global_issue_templates {
  background-image: none !important;
}

a.icon.icon-view_customize {
  background-image: none !important;
}

.legend.cal .icon-svg,
.legend.cal .icon-label {
  display: inline-block !important;
  vertical-align: middle !important;
}

span.ending .icon-svg,
span.starting .icon-svg,
span.toggle-multiselect .icon-svg {
  display: none !important;
  width: 0 !important;
  height: 0 !important;
  overflow: hidden !important;
  visibility: collapse !important;
}

/* ==== Redmine 6 context menu: use only SVG, no background sprites ==== */

/* 1) Remove any sprite-based backgrounds/pseudo-icons */
#context-menu a.submenu,
#context-menu li.folder > a,
#context-menu li > a.icon {
  background: none !important;
  background-image: none !important;
}

#context-menu a.submenu::before,
#context-menu li.folder > a::before,
#context-menu li > a.icon::before,
#context-menu span.icon-only::before {
  content: none !important;
  background: none !important;
  -webkit-mask: none !important;
          mask: none !important;
}

/* 2) Re-enable inline SVGs inside the context menu */
#context-menu svg.s18.icon-svg,
#context-menu svg.s20.icon-svg,
#context-menu svg.icon-svg,
#context-menu span.icon-only {
  display: inline-block !important;
  width: 18px !important;   /* or 20px to match your theme */
  height: 18px !important;
  overflow: hidden !important;
  visibility: visible !important;
  vertical-align: middle;
  fill: currentColor;       /* inherits text color */
}

/* 3) Remove extra right padding that was reserved for the old arrow sprite */
#context-menu a.submenu {
  padding-right: .25rem !important; /* adjust as you like */
}

/* Safety: never tile any remaining background accidentally */
#context-menu a,
#context-menu li {
  background-repeat: no-repeat !important;
}

/* === Context menu: fixed icon + text columns ========================== */
#context-menu li {
  position: relative;                 /* for the right-arrow positioning */
}

#context-menu li > a {
  display: block;                     /* full clickable row */
  position: relative;                 /* for the left icon positioning */
  min-height: 24px;
  line-height: 20px;
  /* L: 12px gutter + 20px icon + 8px gap = 40px
     R: 10px gutter + 12px arrow  = 22px */
  padding: 6px 22px 6px 40px !important;
}

/* place the left icon into the reserved slot */
#context-menu li > a > svg.icon-svg {
  display: inline-block !important;
  position: absolute;
  left: 12px;                         /* gutter */
  top: 50%;
  transform: translateY(-50%);
  width: 20px !important;
  height: 20px !important;
  overflow: visible !important;
  visibility: visible !important;
  fill: currentColor;                 /* follow link color */
  pointer-events: none;               /* clicks go to the link */
}

/* place the submenu chevron (span.icon-only) as a fixed right column */
#context-menu li > a + span.icon-only,
#context-menu span.icon-only {
  position: absolute;
  right: 10px;                        /* right gutter */
  top: 50%;
  transform: translateY(-50%);
  display: inline-block !important;
  width: 12px;
  height: 12px;
}

/* nuke any legacy sprite backgrounds/pseudo icons to avoid doubles */
#context-menu li > a,
#context-menu li > a::before,
#context-menu span.icon-only::before {
  background: none !important;
  background-image: none !important;
  content: none !important;
}

/* keep spacing tidy if items wrap or fonts differ */
#context-menu li > a:hover { text-decoration: none; }

/* === Context menu: compact rows + auto width for long labels ======== */

/* Let the popover grow with content; wrap only if viewport would overflow */
#context-menu {
  width: max-content !important;                 /* expand to longest item */
  max-width: calc(100vw - 24px) !important;      /* keep on-screen */
  min-width: 220px !important;                   /* sensible floor */
}

/* Tighter row geometry */
#context-menu li > a {
  /* L slot: 10px gutter + 16px icon + 8px gap = 34px
     R slot: 12px gutter + 12px arrow = 24px */
  padding: 0px 24px 0px 34px !important;         /* less vertical padding */
  line-height: 18px !important;                  /* more compact line box */
  white-space: normal !important;                /* allow wrapping if needed */
  overflow-wrap: anywhere !important;            /* break long words instead of clipping */
}

/* Smaller icon, aligned left in fixed slot */
#context-menu li > a > svg.icon-svg {
  left: 10px;                                    /* gutter */
  width: 16px !important;
  height: 16px !important;
}

/* Right chevron column stays fixed and narrow */
#context-menu li > a + span.icon-only,
#context-menu span.icon-only {
  right: 12px;
  width: 12px;
  height: 12px;
}

/* Optional: slightly tighter submenu header rows */
#context-menu a.submenu {
  padding-right: 24px !important;
  padding-bottom: 0 !important;
  padding-top: 0 !important;

}

#context-menu li.folder ul li a:not(.icon) {
  padding-bottom: 0 !important;
  padding-top: 0 !important;
}

#context-menu ul {
  width: 210px !important;
}